<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.vital.dao.BookInfoMapper">
    <resultMap id="BaseResultMap" type="com.vital.po.BookInfo">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="author" jdbcType="VARCHAR" property="author"/>
        <result column="status" jdbcType="INTEGER" property="status"/>
        <result column="publish" jdbcType="VARCHAR" property="publish"/>
        <result column="ISBN" jdbcType="VARCHAR" property="isbn"/>
        <result column="language" jdbcType="VARCHAR" property="language"/>
        <result column="price" jdbcType="DOUBLE" property="price"/>
        <result column="pub_date" jdbcType="DATE" property="pubDate"/>
        <result column="type_id" jdbcType="INTEGER" property="typeId"/>
    </resultMap>
    <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.vital.po.BookInfo">
        <result column="introduction" jdbcType="LONGVARCHAR" property="introduction"/>
    </resultMap>
    <select id="queryBookInfoById" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
        select *
        from book_info
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteBookInfoById" parameterType="java.lang.Integer">
        delete
        from book_info
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <insert id="insert" parameterType="com.vital.po.BookInfo">
        insert into book_info (id, name, author,
                               publish, ISBN, language,
                               price, pub_date, type_id,
                               introduction)
        values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{author,jdbcType=VARCHAR},
                #{publish,jdbcType=VARCHAR}, #{isbn,jdbcType=VARCHAR}, #{language,jdbcType=VARCHAR},
                #{price,jdbcType=DOUBLE}, #{pubDate,jdbcType=DATE}, #{typeId,jdbcType=INTEGER},
                #{introduction,jdbcType=LONGVARCHAR})
    </insert>
    <update id="updateByPrimaryKey" parameterType="com.vital.po.BookInfo">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Sun Jun 21 16:29:22 CST 2020.
        -->
        update book_info
        set name = #{name,jdbcType=VARCHAR},
        author = #{author,jdbcType=VARCHAR},
        publish = #{publish,jdbcType=VARCHAR},
        ISBN = #{isbn,jdbcType=VARCHAR},
        language = #{language,jdbcType=VARCHAR},
        price = #{price,jdbcType=DOUBLE},
        pub_date = #{pubDate,jdbcType=DATE},
        type_id = #{typeId,jdbcType=INTEGER}
        where id = #{id,jdbcType=INTEGER}
    </update>
    <!--设置查询出来的resultMap对象-->
    <resultMap id="queryBookAllMap" type="bookInfo" extends="BaseResultMap">
        <association property="classInfo" javaType="com.vital.po.ClassInfo">
            <id column="id" property="id"></id>
            <result property="name" column="typename"></result>
        </association>
    </resultMap>

    <!--查询所有的图书信息-->
    <select id="queryBookInfoAll" parameterType="bookInfo" resultMap="queryBookAllMap">
        select book.* ,type.name as typename from book_info book ,class_info type where type.id=book.type_id
        <if test="name!=null">
            and book.name like '%${name}%'
        </if>
        <if test="isbn!=null">
            and book.isbn like '%${isbn}%'
        </if>
        <if test="typeId!=null">
            and type_id =#{typeId}
        </if>
        <if test="status!=null">
            and status =#{status}
        </if>
    </select>

    <select id="getBookCountByType" resultType="com.vital.po.BookInfo">
        SELECT count(type_id) AS counts,
               type.NAME
        FROM class_info type
                 LEFT JOIN book_info book ON book.type_id = type.id
        GROUP BY type.NAME
    </select>

</mapper>